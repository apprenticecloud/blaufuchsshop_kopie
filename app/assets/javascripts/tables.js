

// Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
// setup uses scrollable div(table-scrollable) with overflow:auto to enable vert

// Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
// setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js).
// So when dropdowns used the scrollable div should be removed.
//"dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r>t<'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",

var language = {
    "emptyTable": "Keine Daten vorhanden.",
    "info": "Zeige _START_ bis _END_ von gesamt _TOTAL_ Einträgen",
    "infoEmpty": "Keine Daten gefunden",
    "infoFiltered": "(filtered1 from _MAX_ total entries)",
    "lengthMenu": "Zeige _MENU_ Einträge",
    "search": "Suchen:",
    "zeroRecords": "Keine Treffer"
}

var tableTools = {
    "sSwfPath": "/assets/global/plugins/datatables/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
    "aButtons": [{
        "sExtends": "pdf",
        "sButtonText": "PDF"
    }, {
        "sExtends": "csv",
        "sButtonText": "CSV"
    }, {
        "sExtends": "xls",
        "sButtonText": "Excel"
    }, {
        "sExtends": "print",
        "sButtonText": "Drucken",
        "sInfo": '"CTRL+P" drücken zum Drucken oder "ESC" um Abzubrechen',
        "sMessage": "Generated by DataTables"
    }, {
        "sExtends": "copy",
        "sButtonText": "Copy"
    }]
}


// SHOW/HIDE COLUMNS
var shColumns = function(table, oTable) {
  if ($('#table_column_toggler').length > 0) {
    var tableColumnToggler = $('#table_column_toggler');

    /* Add event listener for opening and closing details
     * Note that the indicator for showing which row is open is not controlled by DataTables,
     * rather it is done here
     */
    table.on('click', ' tbody td .row-details', function () {
        var nTr = $(this).parents('tr')[0];
        if (oTable.fnIsOpen(nTr)) {
            /* This row is already open - close it */
            $(this).addClass("row-details-close").removeClass("row-details-open");
            oTable.fnClose(nTr);
        } else {
            /* Open this row */
            $(this).addClass("row-details-open").removeClass("row-details-close");
            oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
        }
    });

    /* handle show/hide columns*/
    $('input[type="checkbox"]', tableColumnToggler).change(function () {
        /* Get the DataTables object again - this is not a recreation, just a get of the object */
        var iCol = parseInt($(this).attr("data-column"));
        var bVis = oTable.fnSettings().aoColumns[iCol].bVisible;
        oTable.fnSetColumnVis(iCol, (bVis ? false : true));
    });

    $('input[type="checkbox"]:not(:checked)', tableColumnToggler).each(function () {
        /* Get the DataTables object again - this is not a recreation, just a get of the object */
        var iCol = parseInt($(this).attr("data-column"));
        var bVis = oTable.fnSettings().aoColumns[iCol].bVisible;
        oTable.fnSetColumnVis(iCol, (bVis ? false : true));
    });
  }
}




var TableAdvanced = function () {

    var initTable = function () {
        var table = $('#table');
        $.extend(true, $.fn.DataTable.TableTools.classes, {
            "container": "btn-group tabletools-btn-group pull-right",
            "buttons": {
                "normal": "btn btn-sm default",
                "disabled": "btn btn-sm default disabled"
            }
        });
        var oTable = table.dataTable({
            "language": language,
            "order": [
                [0, 'asc']
            ],
            "lengthMenu": [
                [5, 15, 20, 100, -1],
                [5, 15, 20, 100, "Alle"]
            ],
            "pageLength": 25,
            "dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
            "tableTools": tableTools
        });
        var tableWrapper = $('#table_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
        shColumns(table, oTable);
    }

    var OrderTable = function () {
        var table = $('#table');
        $.extend(true, $.fn.DataTable.TableTools.classes, {
            "container": "btn-group tabletools-btn-group pull-right",
            "buttons": {
                "normal": "btn btn-sm default",
                "disabled": "btn btn-sm default disabled"
            }
        });
        var oTable = table.dataTable({
            "language": language,
            "order": [
                [2, 'desc']
            ],
            "columnDefs": [
              { "orderable": false, "targets": 0 },
              { "orderable": false, "targets": 3 },
              { "orderable": false, "targets": 6 }
            ],
            "lengthMenu": [
                [5, 15, 20, 100, -1],
                [5, 15, 20, 100, "Alle"]
            ],
            "columns": [
                { "data": "id" },
                { "data": "state" },
                { "data": "customer" },
                { "data": "address" },
                { "data": "created_at" },
                { "data": "school_name" },
                { "data": "buttons" }
            ],
            "serverSide": true,
            "ajax": "orders.json",
            "pageLength": 25,
            "dom": "<'row' <'col-md-12'T>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable
            "tableTools": tableTools,
            drawCallback: function() {
              $('.popovers').popover();
            }
        });
        var tableWrapper = $('#table_wrapper'); // datatable creates the table wrapper by adding with id {your_table_jd}_wrapper
        tableWrapper.find('.dataTables_length select').select2(); // initialize select2 dropdown
        shColumns(table, oTable); // SHOW/HIDE COLUMNS
        table.find('.group-checkable').change(function () {
            var set = jQuery(this).attr("data-set");
            var checked = jQuery(this).is(":checked");
            jQuery(set).each(function () {
                if (checked) {
                    $(this).prop('checked', true);
                } else {
                    $(this).prop('checked', false)
                }
            });
            jQuery.uniform.update(set);
        });

    }

    return {
        init: function () {
            if (!jQuery().dataTable) {
                return;
            }
            initTable();
        },
        initOrder: function () {
            if (!jQuery().dataTable) {
                return;
            }
            OrderTable();
        }
    };
}();
